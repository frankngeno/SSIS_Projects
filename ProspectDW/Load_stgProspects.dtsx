<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="9/3/2023 7:12:18 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NGENO_LAPTOP"
  DTS:CreatorName="NGENO_LAPTOP\frank"
  DTS:DelayValidation="True"
  DTS:DTSID="{CABA4A1D-F25F-4756-B35C-A43008641094}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.180"
  DTS:LocaleID="1033"
  DTS:ObjectName="Load_stgProspects"
  DTS:PackageType="5"
  DTS:VersionBuild="177"
  DTS:VersionGUID="{25280F95-967B-4097-9C5B-808984FDD5FB}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Destination Error Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DelayValidation="True"
      DTS:DTSID="{C7BF82D0-4BCD-4DEF-B01A-8D46620587E4}"
      DTS:ObjectName="Destination Error Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ERRORFOLDER] + REPLACE( @[User::FILENAME], ".xls", "" )  + "_" + "Error" + ".txt"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\CollaberyWorkStation\InvalidRecords\Prospect_P_Error.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Name "
              DTS:DTSID="{4323D539-47F9-4D95-A811-AE5EF909B5A4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Title "
              DTS:DTSID="{7527133C-F6A6-45B6-94DD-3BF61333BA28}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Company "
              DTS:DTSID="{6F18C788-D8B8-4BF1-95A6-853BCE14D475}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Location"
              DTS:DTSID="{90BB255E-09A9-4D33-96EC-547AFAE169AB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="6"
              DTS:TextQualified="True"
              DTS:ObjectName="MonthlyIncome"
              DTS:DTSID="{53E4C2B0-464F-47FB-B674-4A209E1ED034}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="6"
              DTS:TextQualified="True"
              DTS:ObjectName="TaxAmount"
              DTS:DTSID="{AE90C166-FBA1-4185-8248-7842F608C7B3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="Date"
              DTS:DTSID="{5E569F16-DA05-41B8-A6F5-1C22A48C4A21}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="14"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="FileName"
              DTS:DTSID="{ECDBCDCA-1806-4A41-93A0-1E128C0F579B}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DelayValidation="True"
      DTS:DTSID="{F500C96E-F1E4-4AA7-BD34-C26E8DB55F5C}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::FILEPATH]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\CollaberyWorkStation\ExcelFiles\prospect_P.xls;Extended Properties=&quot;EXCEL 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Invalid Records Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{882824E9-3D0A-4BC1-90EC-A774BC6DCB1A}"
      DTS:ObjectName="Invalid Records Excel Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::INVALIDRECORDS]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\CollaberyWorkStation\InvalidRecords\InvalidRecords.xls;Extended Properties=&quot;EXCEL 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.Prospects]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{0C6B8A98-F586-4B7A-B7D0-319A283B7291}"
      DTS:ObjectName="LocalHost.Prospects">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=Prospects;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.StageProspects]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{24EA7E4D-7923-4C13-B712-F99433E9C087}"
      DTS:ObjectName="LocalHost.StageProspects">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=StageProspects;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LogFile.txt]"
      DTS:CreationName="FILE"
      DTS:DTSID="{6F9F86E7-909A-4ACB-946C-0C09394C1B0C}"
      DTS:ObjectName="LogFile.txt">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="C:\CollaberyWorkStation\loggiing\LogFile.txt" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP Connection Manager]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{F23305FD-FF01-46E5-A0D3-0E15E5BC7F3D}"
      DTS:ObjectName="SMTP Connection Manager">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=smtp@gmail.com;UseWindowsAuthentication=False;EnableSsl=False;"
          ConnectByProxy="False" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="LogFile.txt"
      DTS:CreationName="Microsoft.LogProviderTextFile"
      DTS:Description="Writes log entries for events to a CSV file"
      DTS:DTSID="{29048AF2-CC68-4036-9305-BA12A5CD1B95}"
      DTS:ObjectName="SSIS log provider for Text files">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8B8D7B20-52B4-40C6-B957-AE6060592628}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ARCHIVEFOLDER">
      <DTS:VariableValue
        DTS:DataType="8">C:\CollaberyWorkStation\ArchiveFolder</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{71B5EDC5-9D2A-4BAD-8B8F-A957AFDAEEC8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ERRORFOLDER">
      <DTS:VariableValue
        DTS:DataType="8">C:\CollaberyWorkStation\InvalidRecords\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4471236F-802E-4389-9FE4-FBEC55945565}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ERROR_COUNT">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D1B68789-E725-4BB2-B69F-5D9B4FC0975F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FILENAME">
      <DTS:VariableValue
        DTS:DataType="8">Prospect_P.xls</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FDADDB66-250C-430E-9E10-67C90AC76A06}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FILEPATH">
      <DTS:VariableValue
        DTS:DataType="8">C:\CollaberyWorkStation\ExcelFiles\prospect_P.xls</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9AFA7D63-8B06-4C91-BD3B-1609EFB83B65}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="INVALIDRECORDS">
      <DTS:VariableValue
        DTS:DataType="8">C:\CollaberyWorkStation\InvalidRecords\InvalidRecords.xls</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{66E60BD4-9603-48F7-89E6-866DCF1EFB6D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LoadData">
      <DTS:VariableValue
        DTS:DataType="11">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AEC22A4F-0697-4FFF-875F-E95B94E03410}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="REPLACE( @[User::FILEPATH],&quot;.xls&quot;, &quot;&quot; ) + &quot;_&quot; +&#xA;&#xA;REPLACE( (DT_WSTR, 10) (DT_DBDATE) @[System::StartTime], &quot;-&quot;, &quot;&quot; ) + &quot;_&quot; +&#xA;&#xA; RIGHT(  &quot;0&quot; +(DT_WSTR, 2)DATEPART( &quot;HH&quot;, (DT_DBTIME) @[System::StartTime] ) , 2 ) + &#xA;&#xA; RIGHT(  &quot;0&quot; +(DT_WSTR, 2)DATEPART( &quot;MM&quot;, (DT_DBTIME) @[System::StartTime] ) , 2 ) +&#xA;&#xA; RIGHT(  &quot;0&quot; +(DT_WSTR, 2)DATEPART( &quot;SS&quot;, (DT_DBTIME) @[System::StartTime] ) , 2 ) + &quot;.xls&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NEWFILENAME">
      <DTS:VariableValue
        DTS:DataType="8">C:\CollaberyWorkStation\ExcelFiles\prospect_P_20231226_101252.xls</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C8EBB753-47C4-4F7A-9275-0FAD8D7DBC63}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SUCCESS_COUNT">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="2" />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{F284A524-E69E-4638-B736-F4A49EE66422}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{24EA7E4D-7923-4C13-B712-F99433E9C087}"
          SQLTask:SqlStatementSource="Execute usp_SendMail 'Frank Ngeno', 'FrankNgenolearningcenter', 'SSIS Package completed Successfull', 'Please Check yourarchive folder to find&#xA; successfully processed files with date time'&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load Multiple Excel Files"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:DelayValidation="True"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{B0BD10CB-168F-4896-BE43-812E459D4222}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Multiple Excel Files">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{0DA0DAD6-F480-412F-B270-0F28980F7A51}"
        DTS:ObjectName="{0DA0DAD6-F480-412F-B270-0F28980F7A51}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\CollaberyWorkStation\ExcelFiles" />
            <FEFEProperty
              FileSpec="*.xls" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Load Multiple Excel Files\Achive processed File System Task"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="File System Task"
          DTS:Disabled="True"
          DTS:DTSID="{5482B652-900A-4A53-A084-FF657B260FFF}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Achive processed File System Task"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::NEWFILENAME"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::ARCHIVEFOLDER"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Load Multiple Excel Files\Data Flow Task"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{77712DB2-13E8-4A66-862E-CB6046120EAC}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Load Multiple Excel Files\Data Flow Task\Check for existing records"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check for existing records"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Tbl_stg_Prospects]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Tbl_stg_Prospects]) [refTable]
where [refTable].[Name ] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Name " dataType="DT_STR" length="250" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Title " dataType="DT_STR" length="250" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Company " dataType="DT_STR" length="250" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Location" dataType="DT_STR" length="250" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Title/Designation" dataType="DT_STR" length="250" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Dept" dataType="DT_STR" length="250" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LastName" dataType="DT_STR" length="250" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="FirstName" dataType="DT_STR" length="250" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="City" dataType="DT_STR" length="250" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="State" dataType="DT_STR" length="250" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Date" dataType="DT_STR" length="250" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="MonthlyIncome" dataType="DT_CY" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TaxAmount" dataType="DT_CY" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Name_STR]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Check for existing records.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.StageProspects]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.StageProspects]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Check for existing records.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Check for existing records.Inputs[Lookup Input].Columns[Name_STR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="250"
                          cachedName="Name_STR"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Name_STR]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Name </property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Check for existing records.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Load Multiple Excel Files\Data Flow Task\Check for existing records.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Check for existing records.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Load Multiple Excel Files\Data Flow Task\Check for existing records.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Check for existing records.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Load Multiple Excel Files\Data Flow Task\Check for existing records.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Check for existing records.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Check for existing records.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Check for existing records.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Check for existing records.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Name ]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Name "
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Name ]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Title ]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Title "
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Title ]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Company ]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Company "
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Company ]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Location]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Location"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Location]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[MonthlyIncome]"
                          cachedDataType="cy"
                          cachedName="MonthlyIncome"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[MonthlyIncome]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[TaxAmount]"
                          cachedDataType="cy"
                          cachedName="TaxAmount"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[TaxAmount]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[LastName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="LastName"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[LastName]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[FirstName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="FirstName"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[FirstName]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Dept]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Dept"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[Dept]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Title/Designation]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Title/Designation"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[Title/Designation]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[InsertDate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="InsertDate"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[InsertDate]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[State]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="State"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[State]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[City]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="City"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[City]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Title_STR]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="250"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Title_STR]"
                          name="Title_STR"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Title ]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Title/Designation_STR]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="250"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Title/Designation_STR]"
                          name="Title/Designation_STR"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[Title/Designation]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[TaxAmount_STR]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[TaxAmount_STR]"
                          name="TaxAmount_STR"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[TaxAmount]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[State_STR]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="250"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[State_STR]"
                          name="State_STR"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[State]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Name_STR]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="250"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Name_STR]"
                          name="Name_STR"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Name ]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[MonthlyIncome_STR]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[MonthlyIncome_STR]"
                          name="MonthlyIncome_STR"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[MonthlyIncome]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Location_STR]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="250"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Location_STR]"
                          name="Location_STR"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Location]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[LastName_STR]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="250"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[LastName_STR]"
                          name="LastName_STR"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[LastName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[InsertDate_STR]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[InsertDate_STR]"
                          name="InsertDate_STR"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[InsertDate]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[FirstName_STR]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="250"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[FirstName_STR]"
                          name="FirstName_STR"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[FirstName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Dept_STR]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="250"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Dept_STR]"
                          name="Dept_STR"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[Dept]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Date_STR]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Date_STR]"
                          name="Date_STR"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Company_STR]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="250"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Company_STR]"
                          name="Company_STR"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Company ]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[City_STR]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="250"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[City_STR]"
                          name="City_STR"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[City]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load Multiple Excel Files\Data Flow Task\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Load Multiple Excel Files\Data Flow Task\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[FileName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="14"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[FileName]"
                          name="FileName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::FILENAME]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::FILENAME]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Load Multiple Excel Files\Data Flow Task\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived column Transform Split Columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Inputs[Derived Column Input].Columns[Name ]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Name "
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Name ]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Inputs[Derived Column Input].Columns[Title ]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Title "
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Title ]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Inputs[Derived Column Input].Columns[Location]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Location"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Location]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[LastName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[LastName]"
                          name="LastName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[RTRIM]([LTRIM]([SUBSTRING](#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Name ]},1,[FINDSTRING](#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Name ]} + ",",",",1) - 1)))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">RTRIM(LTRIM(SUBSTRING([Name ],1,FINDSTRING([Name ] + ",",",",1) - 1)))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[FirstName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[FirstName]"
                          name="FirstName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[RTRIM]([LTRIM]([SUBSTRING](#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Name ]},[FINDSTRING](#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Name ]} + ",",",",1) + 1,[LEN](#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Name ]}))))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">RTRIM(LTRIM(SUBSTRING([Name ],FINDSTRING([Name ] + ",",",",1) + 1,LEN([Name ]))))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[Dept]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[Dept]"
                          name="Dept"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[RTRIM]([LTRIM]([SUBSTRING](#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Title ]},[FINDSTRING](#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Title ]} + ",",",",1) + 1,[LEN](#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Title ]}))))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">RTRIM(LTRIM(SUBSTRING([Title ],FINDSTRING([Title ] + ",",",",1) + 1,LEN([Title ]))))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[Title/Designation]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[Title/Designation]"
                          name="Title/Designation"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[RTRIM]([LTRIM]([SUBSTRING](#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Title ]},1,[FINDSTRING](#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Title ]} + ",",",",1) - 1)))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">RTRIM(LTRIM(SUBSTRING([Title ],1,FINDSTRING([Title ] + ",",",",1) - 1)))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[City]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[City]"
                          name="City"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[RTRIM]([LTRIM]([SUBSTRING](#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Location]},1,[FINDSTRING](#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Location]} + ",",",",1) - 1)))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">RTRIM(LTRIM(SUBSTRING(Location,1,FINDSTRING(Location + ",",",",1) - 1)))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[State]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[State]"
                          name="State"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[RTRIM]([LTRIM]([SUBSTRING](#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Location]},[FINDSTRING](#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Location]} + ",",",",1) + 1,[LEN](#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Location]}))))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">RTRIM(LTRIM(SUBSTRING(Location,FINDSTRING(Location + ",",",",1) + 1,LEN(Location))))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[InsertDate]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output].Columns[InsertDate]"
                          name="InsertDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DBTIMESTAMP)[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DBTIMESTAMP)GETDATE()</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Destination Error Records"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[ErrorRecords]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.StageProspects]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.StageProspects]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].Columns[Name ]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Name "
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].ExternalColumns[Name ]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Name ]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].Columns[Title ]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Title "
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].ExternalColumns[Title ]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Title ]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].Columns[Company ]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Company "
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].ExternalColumns[Company ]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Company ]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].Columns[Location]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Location"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].ExternalColumns[Location]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Location]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].Columns[MonthlyIncome]"
                          cachedDataType="cy"
                          cachedName="MonthlyIncome"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].ExternalColumns[MonthlyIncome]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[MonthlyIncome]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].Columns[TaxAmount]"
                          cachedDataType="cy"
                          cachedName="TaxAmount"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].ExternalColumns[TaxAmount]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[TaxAmount]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].Columns[FileName]"
                          cachedDataType="wstr"
                          cachedLength="14"
                          cachedName="FileName"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].ExternalColumns[FileName]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[FileName]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].ExternalColumns[Name ]"
                          dataType="wstr"
                          length="255"
                          name="Name " />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].ExternalColumns[Title ]"
                          dataType="wstr"
                          length="255"
                          name="Title " />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].ExternalColumns[Company ]"
                          dataType="wstr"
                          length="255"
                          name="Company " />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].ExternalColumns[Location]"
                          dataType="wstr"
                          length="255"
                          name="Location" />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].ExternalColumns[MonthlyIncome]"
                          dataType="cy"
                          name="MonthlyIncome" />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].ExternalColumns[TaxAmount]"
                          dataType="cy"
                          name="TaxAmount" />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                          dataType="dbTimeStamp"
                          name="Date" />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input].ExternalColumns[FileName]"
                          dataType="wstr"
                          length="255"
                          name="FileName" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination"
                  componentClassID="Microsoft.FlatFileDestination"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Error Records Destination"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                    <property
                      dataType="System.Boolean"
                      description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                      name="EscapeQualifier">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Destination Error Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Destination Error Connection Manager]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].Columns[Name ]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Name "
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].ExternalColumns[Name ]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Name ]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].Columns[Title ]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Title "
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].ExternalColumns[Title ]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Title ]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].Columns[Company ]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Company "
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].ExternalColumns[Company ]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Company ]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].Columns[Location]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Location"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].ExternalColumns[Location]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Location]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].Columns[MonthlyIncome]"
                          cachedDataType="cy"
                          cachedName="MonthlyIncome"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].ExternalColumns[MonthlyIncome]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[MonthlyIncome]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].Columns[TaxAmount]"
                          cachedDataType="cy"
                          cachedName="TaxAmount"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].ExternalColumns[TaxAmount]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[TaxAmount]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].ExternalColumns[Date]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].Columns[FileName]"
                          cachedDataType="wstr"
                          cachedLength="14"
                          cachedName="FileName"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].ExternalColumns[FileName]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[FileName]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].ExternalColumns[Name ]"
                          dataType="wstr"
                          length="255"
                          name="Name " />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].ExternalColumns[Title ]"
                          dataType="wstr"
                          length="255"
                          name="Title " />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].ExternalColumns[Company ]"
                          dataType="wstr"
                          length="255"
                          name="Company " />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].ExternalColumns[Location]"
                          dataType="wstr"
                          length="255"
                          name="Location" />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].ExternalColumns[MonthlyIncome]"
                          dataType="cy"
                          name="MonthlyIncome" />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].ExternalColumns[TaxAmount]"
                          dataType="cy"
                          name="TaxAmount" />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].ExternalColumns[Date]"
                          dataType="date"
                          name="Date" />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input].ExternalColumns[FileName]"
                          dataType="wstr"
                          length="14"
                          name="FileName" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Load Multiple Excel Files\Data Flow Task\error Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="error Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::ERROR_COUNT</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Load Multiple Excel Files\Data Flow Task\error Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\error Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Load Multiple Excel Files\Data Flow Task\error Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Sheet1$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Name ]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Name ]"
                          length="255"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Name ]"
                          name="Name "
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Title ]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Title ]"
                          length="255"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Title ]"
                          name="Title "
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Company ]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Company ]"
                          length="255"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Company ]"
                          name="Company "
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Location]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Location]"
                          length="255"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Location]"
                          name="Location"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[MonthlyIncome]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[MonthlyIncome]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[MonthlyIncome]"
                          name="MonthlyIncome"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[TaxAmount]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[TaxAmount]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[TaxAmount]"
                          name="TaxAmount"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                          name="Date"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Name ]"
                          dataType="wstr"
                          length="255"
                          name="Name " />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Title ]"
                          dataType="wstr"
                          length="255"
                          name="Title " />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Company ]"
                          dataType="wstr"
                          length="255"
                          name="Company " />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Location]"
                          dataType="wstr"
                          length="255"
                          name="Location" />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[MonthlyIncome]"
                          dataType="cy"
                          name="MonthlyIncome" />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[TaxAmount]"
                          dataType="cy"
                          name="TaxAmount" />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                          dataType="date"
                          name="Date" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Name ]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Name ]"
                          name="Name " />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Title ]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Title ]"
                          name="Title " />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Company ]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Company ]"
                          name="Company " />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Location]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Location]"
                          name="Location" />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[MonthlyIncome]"
                          dataType="cy"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[MonthlyIncome]"
                          name="MonthlyIncome" />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[TaxAmount]"
                          dataType="cy"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[TaxAmount]"
                          name="TaxAmount" />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                          dataType="date"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                          name="Date" />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load Multiple Excel Files\Data Flow Task\Fiilter  Out Null Values"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Fiilter  Out Null Values"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Fiilter  Out Null Values.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Fiilter  Out Null Values.Inputs[Conditional Split Input].Columns[Name ]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Name "
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Name ]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Fiilter  Out Null Values.Inputs[Conditional Split Input].Columns[Title ]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Title "
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Title ]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Fiilter  Out Null Values.Inputs[Conditional Split Input].Columns[Company ]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Company "
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Company ]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Fiilter  Out Null Values.Inputs[Conditional Split Input].Columns[Location]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Location"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Location]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Fiilter  Out Null Values.Outputs[InvalidRecords]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="InvalidRecords"
                      synchronousInputId="Package\Load Multiple Excel Files\Data Flow Task\Fiilter  Out Null Values.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[ISNULL](#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Name ]}) ==  TRUE  || [ISNULL](#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Title ]}) ==  TRUE  || [ISNULL](#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Company ]}) ==  TRUE  || [ISNULL](#{Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Location]}) ==  TRUE </property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL([Name ]) ==  TRUE  || ISNULL([Title ]) ==  TRUE  || ISNULL([Company ]) ==  TRUE  || ISNULL(Location) ==  TRUE </property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Fiilter  Out Null Values.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Load Multiple Excel Files\Data Flow Task\Fiilter  Out Null Values.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Fiilter  Out Null Values.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Load Multiple Excel Files\Data Flow Task\Fiilter  Out Null Values.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Fiilter  Out Null Values.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Fiilter  Out Null Values.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\Fiilter  Out Null Values.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Fiilter  Out Null Values.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load Multiple Excel Files\Data Flow Task\Multicast"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="Multicast">
                  <inputs>
                    <input
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Multicast.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Multicast.Outputs[Multicast Output 2]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 2"
                      synchronousInputId="Package\Load Multiple Excel Files\Data Flow Task\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Multicast.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\Load Multiple Excel Files\Data Flow Task\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Multicast.Outputs[Multicast Output 3]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\Load Multiple Excel Files\Data Flow Task\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="OLE DB Command"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">UPDATE [tbl_stg_prospects] 
SET [FirstName]  = ?,
[LastName] = ?,
[Title ] = ?,
[Company ]  = ?,
[Location] = ?,
[Title/Designation]  = ?,
[Dept]  = ?,
[City]  = ?,
[State] = ?,
[Date]  = ?,
[MonthlyIncome] = ?,
[TaxAmount]  = ?
WHERE [Name]=?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.StageProspects]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.StageProspects]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[FirstName_STR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="250"
                          cachedName="FirstName_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[FirstName_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[LastName_STR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="250"
                          cachedName="LastName_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[LastName_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[Title_STR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="250"
                          cachedName="Title_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Title_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[Company_STR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="250"
                          cachedName="Company_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Company_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[Location_STR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="250"
                          cachedName="Location_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Location_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[Title/Designation_STR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="250"
                          cachedName="Title/Designation_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Title/Designation_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[Dept_STR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="250"
                          cachedName="Dept_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Dept_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[City_STR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="250"
                          cachedName="City_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[City_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[State_STR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="250"
                          cachedName="State_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[State_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[Name_STR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="250"
                          cachedName="Name_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_12]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Name_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[Date_STR]"
                          cachedDataType="date"
                          cachedName="Date_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Date_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[MonthlyIncome_STR]"
                          cachedDataType="cy"
                          cachedName="MonthlyIncome_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[MonthlyIncome_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[TaxAmount_STR]"
                          cachedDataType="cy"
                          cachedName="TaxAmount_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[TaxAmount_STR]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="Param_0">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="Param_1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="Param_2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="Param_3">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="Param_4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="Param_5">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="Param_6">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="Param_7">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="Param_8">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="Param_9">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                          dataType="cy"
                          name="Param_10">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                          dataType="cy"
                          name="Param_11">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_12]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="Param_12">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tbl_stg_prospects]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.StageProspects]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.StageProspects]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Name_STR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="250"
                          cachedName="Name_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Name ]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Name_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Title_STR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="250"
                          cachedName="Title_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Title ]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Title_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Company_STR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="250"
                          cachedName="Company_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Company ]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Company_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Location_STR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="250"
                          cachedName="Location_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Location]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Location_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Title/Designation_STR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="250"
                          cachedName="Title/Designation_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Title/Designation]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Title/Designation_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Dept_STR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="250"
                          cachedName="Dept_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Dept]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Dept_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[LastName_STR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="250"
                          cachedName="LastName_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[LastName_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FirstName_STR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="250"
                          cachedName="FirstName_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[FirstName_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[City_STR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="250"
                          cachedName="City_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[City_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[State_STR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="250"
                          cachedName="State_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[State]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[State_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Date_STR]"
                          cachedDataType="date"
                          cachedName="Date_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Date_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[MonthlyIncome_STR]"
                          cachedDataType="cy"
                          cachedName="MonthlyIncome_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MonthlyIncome]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[MonthlyIncome_STR]" />
                        <inputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TaxAmount_STR]"
                          cachedDataType="cy"
                          cachedName="TaxAmount_STR"
                          externalMetadataColumnId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TaxAmount]"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[TaxAmount_STR]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Name ]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="Name " />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Title ]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="Title " />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Company ]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="Company " />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Location]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="Location" />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Title/Designation]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="Title/Designation" />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Dept]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="Dept" />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[State]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="Date" />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MonthlyIncome]"
                          dataType="cy"
                          name="MonthlyIncome" />
                        <externalMetadataColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TaxAmount]"
                          dataType="cy"
                          name="TaxAmount" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load Multiple Excel Files\Data Flow Task\Successfull Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Successfull Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::SUCCESS_COUNT</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Successfull Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load Multiple Excel Files\Data Flow Task\Successfull Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Load Multiple Excel Files\Data Flow Task\Successfull Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Load Multiple Excel Files\Data Flow Task.Paths[Conditional Split Default Output]"
                  endId="Package\Load Multiple Excel Files\Data Flow Task\Successfull Row Count.Inputs[Row Count Input 1]"
                  name="Conditional Split Default Output"
                  startId="Package\Load Multiple Excel Files\Data Flow Task\Fiilter  Out Null Values.Outputs[Conditional Split Default Output]" />
                <path
                  refId="Package\Load Multiple Excel Files\Data Flow Task.Paths[Data Conversion Output]"
                  endId="Package\Load Multiple Excel Files\Data Flow Task\Check for existing records.Inputs[Lookup Input]"
                  name="Data Conversion Output"
                  startId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Load Multiple Excel Files\Data Flow Task.Paths[Derived Column Output]"
                  endId="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Load Multiple Excel Files\Data Flow Task.Paths[Derived Column Output1]"
                  endId="Package\Load Multiple Excel Files\Data Flow Task\Multicast.Inputs[Multicast Input 1]"
                  name="Derived Column Output"
                  startId="Package\Load Multiple Excel Files\Data Flow Task\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Load Multiple Excel Files\Data Flow Task.Paths[Excel Source Output]"
                  endId="Package\Load Multiple Excel Files\Data Flow Task\Fiilter  Out Null Values.Inputs[Conditional Split Input]"
                  name="Excel Source Output"
                  startId="Package\Load Multiple Excel Files\Data Flow Task\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Load Multiple Excel Files\Data Flow Task.Paths[InvalidRecords]"
                  endId="Package\Load Multiple Excel Files\Data Flow Task\error Row Count.Inputs[Row Count Input 1]"
                  name="InvalidRecords"
                  startId="Package\Load Multiple Excel Files\Data Flow Task\Fiilter  Out Null Values.Outputs[InvalidRecords]" />
                <path
                  refId="Package\Load Multiple Excel Files\Data Flow Task.Paths[Lookup Match Output]"
                  endId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input]"
                  name="Lookup Match Output"
                  startId="Package\Load Multiple Excel Files\Data Flow Task\Check for existing records.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Load Multiple Excel Files\Data Flow Task.Paths[Lookup No Match Output]"
                  endId="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Load Multiple Excel Files\Data Flow Task\Check for existing records.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Load Multiple Excel Files\Data Flow Task.Paths[Multicast Output 1]"
                  endId="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination.Inputs[Flat File Destination Input]"
                  name="Multicast Output 1"
                  startId="Package\Load Multiple Excel Files\Data Flow Task\Multicast.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\Load Multiple Excel Files\Data Flow Task.Paths[Multicast Output 2]"
                  endId="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records.Inputs[OLE DB Destination Input]"
                  name="Multicast Output 2"
                  startId="Package\Load Multiple Excel Files\Data Flow Task\Multicast.Outputs[Multicast Output 2]" />
                <path
                  refId="Package\Load Multiple Excel Files\Data Flow Task.Paths[Row Count Output 1]"
                  endId="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns.Inputs[Derived Column Input]"
                  name="Row Count Output 1"
                  startId="Package\Load Multiple Excel Files\Data Flow Task\Successfull Row Count.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Load Multiple Excel Files\Data Flow Task.Paths[Row Count Output 11]"
                  endId="Package\Load Multiple Excel Files\Data Flow Task\Derived Column.Inputs[Derived Column Input]"
                  name="Row Count Output 1"
                  startId="Package\Load Multiple Excel Files\Data Flow Task\error Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Load Multiple Excel Files\Get Success Count and Error Count"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{B4734ECD-5A76-4351-AD72-06B49D550C2C}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Success Count and Error Count"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_79b3044c4fd64710b441963505571ae3"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::ERROR_COUNT,User::FILENAME,User::SUCCESS_COUNT">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_79b3044c4fd64710b441963505571ae3.Properties.Settings.get_Default():ST_79b3044c4fd64710b441963505571ae3.Properties.Sett" +
    "ings")]

namespace ST_79b3044c4fd64710b441963505571ae3.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_79b3044c4fd64710b441963505571ae3
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string strFileName;
            string strSuccessCount;
            string strErrorCount;

            string strMessage;

            strFileName = Dts.Variables["User::FILENAME"].Value.ToString();
            strSuccessCount = Dts.Variables["User::SUCCESS_COUNT"].Value.ToString();
            strErrorCount = Dts.Variables["User::ERROR_COUNT"].Value.ToString();

            strMessage = strFileName + " Has " + strSuccessCount 
                + " Good Records and " + strErrorCount + " bad Records";

           // MessageBox.Show(strMessage);

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_79b3044c4fd64710b441963505571ae3.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{607cbb50-9d65-41ec-814a-5cbadea33757}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_79b3044c4fd64710b441963505571ae3</RootNamespace>
    <AssemblyName>ST_79b3044c4fd64710b441963505571ae3</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_79b3044c4fd64710b441963505571ae3</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_79b3044c4fd64710b441963505571ae3</msb:DisplayName>
    <msb:ProjectId>{A87DBF03-7158-4515-8B85-1BC42AB9C9A8}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_79b3044c4fd64710b441963505571ae3.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_79b3044c4fd64710b441963505571ae3")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_79b3044c4fd64710b441963505571ae3")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_79b3044c4fd64710b441963505571ae3.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_79b3044c4fd64710b441963505571ae3.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_79b3044c4fd64710b441963505571ae3.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_79b3044c4fd64710b441963505571ae3.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_79b3044c4fd64710b441963505571ae3.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_79b3044c4fd64710b441963505571ae3.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOjFhmUAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAqi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFguAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAsA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACM
LgAAAAAAAEgAAAACAAUAYCEAAEAMAAABAAAAAAAAAKAtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBACdAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyHwAAcG8SAAAKbxMAAApvFAAACgsCKBAAAApvEQAACnJHAABw
bxIAAApvEwAACm8UAAAKDByNGwAAASUWBqIlF3JrAABwoiUYB6IlGXJ3AABwoiUaCKIlG3KdAABw
oigVAAAKJgIoEAAAChZvFgAACioeAigXAAAKKh4CKBgAAAoqrn4BAAAELR5ytwAAcNADAAACKBkA
AApvGgAACnMbAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoHAAACioucwgA
AAaAAwAABCoAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAyAMAACN+AAA0BAAA
ZAUAACNTdHJpbmdzAAAAAJgJAAAsAQAAI1VTAMQKAAAQAAAAI0dVSUQAAADUCgAAbAEAACNCbG9i
AAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAAB4AAAAFAAAABgAAAAkAAAABAAAAHAAAAAIA
AAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAHUDAQAAAAAABgAlAkUEBgC0
AkUEBgBxATIEDwC5BAAABgCeAfMDBgAIAvMDBgDpAfMDBgCbAvMDBgBFAvMDBgBeAvMDBgC1AfMD
BgDQAeICCgB5AiQDCgDwACQDBgCtA6YDBgBUATIEBgAzBaYDBgAVBGUEBgAFBN4DDgAkAV8DDgCF
AV8DDgAMAckDBgA5AUUECgBNAyQDEgD7BJsAEgBuAJsABgD+AqYDBgC7AKYDBgB3AKYDBgBZBfMD
AAAAACUAAAAAAAEAAQABABAAvgMBADkAAQABAAAAEABsBMgERQABAAMAAAEQAAUFyARZAAMABwAD
AQAAHgUAAD0ABAAKABEAsgNuABEA4AByABEAXgB2AAYGTQB6AFaADgV9AFaAwAB9AFAgAAAAAIYA
xAMGAAEA+SAAAAAAhhglBAYAAQABIQAAAACDGCUEBgABAAkhAAAAAJMIEQSBAAEANSEAAAAAkwjI
AIYAAQA8IQAAAACTCNQAiwABAEQhAAAAAJYIOgWRAAIASyEAAAAAhhglBAYAAgBTIQAAAACRGCsE
lgACAAAAAQDcAgkAJQQBABEAJQQGABkAJQQKACkAJQQQADEAJQQQADkAJQQQAEEAJQQQAEkAJQQQ
AFEAJQQQAFkAJQQQAGEAJQQQAGkAJQQGAIEAJQQGAKkAJQQVALkAJQQGAHEAFgUhAMEA9wQmAMkA
nQMrANEA0gIxAIkA/AI1ANkALAU5AMEARgUBAHEAJQQGAIkAJQQGAOEAiQA/AOEAVQVGAJEAJQRL
ALEAJQQGAAgAFABkAAgAGABpACkAcwDRAC4ACwCpAC4AEwCyAC4AGwDRAC4AIwDaAC4AKwADAS4A
MwADAS4AOwADAS4AQwDaAC4ASwAJAS4AUwADAS4AWwAgAUMAYwBpAEkAcwDRAGEAewBpAGMAawBp
ABsAAwABAAQAAwAAABUEmgAAAOgAnwAAAD4FpAACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAA
AQAAADUiRCcAAAAAAAABAAAABAAAAAAAAAAAAAAAUgBVAAAAAAAPAAAAAAAAAAAAAABbAAUDAAAA
AAQAAAAAAAAAAAAAAFIApgMAAAAADwAAAAAAAAAAAAAAWwAuAAAAAAAAAAAAAQAAAHYEAAAFAAIA
AAAAU1RfNzliMzA0NGM0ZmQ2NDcxMGI0NDE5NjM1MDU1NzFhZTMAPE1vZHVsZT4ATWljcm9zb2Z0
LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFZh
cmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJl
c291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUA
RGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJr
QXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0
dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55
QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2Ny
aXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9i
amVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF83OWIzMDQ0YzRmZDY0NzEwYjQ0MTk2
MzUwNTU3MWFlMy5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFp
bgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVj
dGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0u
RGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3Vy
Y2VzAFNUXzc5YjMwNDRjNGZkNjQ3MTBiNDQxOTYzNTA1NTcxYWUzLlByb3BlcnRpZXMuUmVzb3Vy
Y2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF83OWIzMDQ0YzRmZDY0NzEwYjQ0MTk2MzUw
NTU3MWFlMy5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRz
AFNjcmlwdFJlc3VsdHMAQ29uY2F0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABn
ZXRfQXNzZW1ibHkAAAAAHVUAcwBlAHIAOgA6AEYASQBMAEUATgBBAE0ARQAAJ1UAcwBlAHIAOgA6
AFMAVQBDAEMARQBTAFMAXwBDAE8AVQBOAFQAACNVAHMAZQByADoAOgBFAFIAUgBPAFIAXwBDAE8A
VQBOAFQAAAsgAEgAYQBzACAAACUgAEcAbwBvAGQAIABSAGUAYwBvAHIAZABzACAAYQBuAGQAIAAA
GSAAYgBhAGQAIABSAGUAYwBvAHIAZABzAABxUwBUAF8ANwA5AGIAMwAwADQANABjADQAZgBkADYA
NAA3ADEAMABiADQANAAxADkANgAzADUAMAA1ADUANwAxAGEAZQAzAC4AUAByAG8AcABlAHIAdABp
AGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAADknZq0YoeHTJDUljnUCihAAAQgAQEIAyAAAQUg
AQEREQQgAQEOBSABARFRBQcDDg4OBCAAEmEEIAASZQUgARJpHAMgABwDIAAOBQABDh0OBgABEnER
dQQgABJ5BiACAQ4SeQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJJAwYSTQMGEhACBggD
BhEUBAAAEkkEAAASTQUAAQESTQQAABIQAwAAAQQIABJJBAgAEk0ECAASEAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfNzliMzA0NGM0ZmQ2NDcx
MGI0NDE5NjM1MDU1NzFhZTMAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMwAASQEAGi5ORVRG
cmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1l
d29yayA0LjcAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAACALgAAAAAAAAAAAACaLgAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAjC4AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQBEJzUiAAABAEQnNSI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADcAOQBiADMAMAA0ADQAYwA0AGYAZAA2ADQANwAxADAAYgA0ADQAMQA5ADYAMwA1
ADAANQA1ADcAMQBhAGUAMwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA4ADcANQA3AC4AMQAwADAANQAyAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADcAOQBiADMAMAA0ADQAYwA0AGYAZAA2ADQANwAxADAAYgA0ADQAMQA5ADYAMwA1ADAA
NQA1ADcAMQBhAGUAMwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8ANwA5AGIAMwAwADQANABjADQAZgBkADYANAA3ADEAMABiADQANAAxADkA
NgAzADUAMAA1ADUANwAxAGEAZQAzAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADcAOQBiADMAMAA0ADQAYwA0AGYAZAA2ADQANwAxADAAYgA0ADQAMQA5ADYA
MwA1ADAANQA1ADcAMQBhAGUAMwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOAA3ADUANwAuADEAMAAwADUAMgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAA3ADUANwAuADEAMAAwADUAMgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAACsPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Load Multiple Excel Files\Populate Audit Table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{ED0D8EB3-ED38-483C-A7C2-AFAE88CC2480}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Populate Audit Table"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{24EA7E4D-7923-4C13-B712-F99433E9C087}"
              SQLTask:SqlStatementSource="EXECUTE dbo.upsAuditLoadedFiles ?&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::FILENAME"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Load Multiple Excel Files\Script Task to Display message"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{8D844209-C3A5-40E8-84FF-9D47D844F92F}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task to Display message"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_916683cc6e4a4507a233dfda468c386f"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::FILEPATH"
              ReadWriteVariables="User::FILENAME">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_916683cc6e4a4507a233dfda468c386f.Properties.Settings.get_Default():ST_916683cc6e4a4507a233dfda468c386f.Properties.Sett" +
    "ings")]

namespace ST_916683cc6e4a4507a233dfda468c386f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_916683cc6e4a4507a233dfda468c386f
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string strFileName; // FILENAME SSIS Variable
            string strFilePath; // FILEPATh SSIS Variable

            strFilePath = Dts.Variables["User::FILEPATH"].Value.ToString();

            strFileName = Path.GetFileName(strFilePath);

            // Now assign the name
            Dts.Variables["User::FILENAME"].Value = strFileName;

            //MessageBox.Show(strFileName);
                  
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_916683cc6e4a4507a233dfda468c386f</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_916683cc6e4a4507a233dfda468c386f</msb:DisplayName>
    <msb:ProjectId>{B7CF5999-13B7-4865-BA1A-EB126FDACA70}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_916683cc6e4a4507a233dfda468c386f.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ST_916683cc6e4a4507a233dfda468c386f.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{582C5397-C668-45D9-8078-C14C9E43A185}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_916683cc6e4a4507a233dfda468c386f</RootNamespace>
    <AssemblyName>ST_916683cc6e4a4507a233dfda468c386f</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_916683cc6e4a4507a233dfda468c386f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_916683cc6e4a4507a233dfda468c386f")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_916683cc6e4a4507a233dfda468c386f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_916683cc6e4a4507a233dfda468c386f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_916683cc6e4a4507a233dfda468c386f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_916683cc6e4a4507a233dfda468c386f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_916683cc6e4a4507a233dfda468c386f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_916683cc6e4a4507a233dfda468c386f.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKO4gWUAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAAi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALAtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAACA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADk
LQAAAAAAAEgAAAACAAUAECEAAOgLAAABAAAAAAAAAPgsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAgBNAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAooFQAACgoCKBAAAApvEQAACnIfAABwbxIAAAoGbxYAAAoCKBAAAAoWbxcAAAoqHgIo
GAAACioeAigZAAAKKq5+AQAABC0ecj0AAHDQAwAAAigaAAAKbxsAAApzHAAACoABAAAEfgEAAAQq
Gn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKB0AAAoqLnMIAAAGgAMAAAQqAEJTSkIBAAEAAAAAAAwA
AAB2NC4wLjMwMzE5AAAAAAUAbAAAANADAAAjfgAAPAQAAIAFAAAjU3RyaW5ncwAAAAC8CQAAsAAA
ACNVUwBsCgAAEAAAACNHVUlEAAAAfAoAAGwBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+gEz
ABYAAAEAAAAeAAAABQAAAAYAAAAJAAAAAQAAAB0AAAACAAAAEAAAAAEAAAACAAAAAwAAAAQAAAAB
AAAABAAAAAEAAAABAAAAAACaAwEAAAAAAAYAFwJqBAYApgJqBAYAYwFXBA8A3gQAAAYAkAEYBAYA
+gEYBAYA2wEYBAYAjQIYBAYANwIYBAYAUAIYBAYApwEYBAYAwgECAwoAawJJAwoA4gBJAwYA0gPL
AwYARgFXBAYAUQXLAwYAOgSKBAYAKgQDBA4AFgGEAw4AdwGEAw4A/gDuAwYAKwFqBAoAcgNJAxIA
IAWNABIAVACNAAYAJQMKAAYArQDLAwYAXQDLAwYAdwUYBAAAAAABAAAAAAABAAEAAQAQAOMD3gI5
AAEAAQAAABAAkQTtBEUAAQADAAABEAAqBe0EWQADAAcAAwEAAEMFAAA9AAQACgARANcDcAARANIA
dAARAEQAeAAGBjMAfABWgDMFfwBWgLIAfwBQIAAAAACGAOkDBgABAKkgAAAAAIYYSgQGAAEAsSAA
AAAAgxhKBAYAAQC5IAAAAACTCDYEgwABAOUgAAAAAJMIugCIAAEA7CAAAAAAkwjGAI0AAQD0IAAA
AACWCFgFkwACAPsgAAAAAIYYSgQGAAIAAyEAAAAAkRhQBJgAAgAAAAEA2AIJAEoEAQARAEoEBgAZ
AEoECgApAEoEEAAxAEoEEAA5AEoEEABBAEoEEABJAEoEEABRAEoEEABZAEoEEABhAEoEEABpAEoE
BgCBAEoEBgCpAEoEFQC5AEoEBgBxADsFHwDBABwFJADJAMIDKQDRAMQCLwCJABwDMwDZAIEANwDR
AM4CPADBAGQFAQBxAEoEBgCJAEoEBgDhAG8AQQDhAHMFSACRAEoETQCxAEoEBgAIABQAZgAIABgA
awApAHMA0wAuAAsAqwAuABMAtAAuABsA0wAuACMA3AAuACsABQEuADMABQEuADsABQEuAEMA3AAu
AEsACwEuAFMABQEuAFsAIgFDAGMAawBJAHMA0wBhAHsAawBjAGsAawAbAAMAAQAEAAMAAAA6BJwA
AADaAKEAAABcBaYAAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAAAxIqFDAAAAAAAA3gIA
AAQAAAAAAAAAAAAAAFQAOwAAAAAADwAAAAAAAAAAAAAAXQAqAwAAAAAEAAAAAAAAAAAAAABUAMsD
AAAAAA8AAAAAAAAAAAAAAF0AFAAAAAAAAAAAAAEAAACbBAAABQACAAAAAAAAPE1vZHVsZT4AU3lz
dGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAGRl
ZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRs
ZQBHZXRGaWxlTmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVy
ZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2Jq
ZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRl
AENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUA
RGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRy
aWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B
dHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBv
aW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0
eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFNUXzkxNjY4M2NjNmU0YTQ1MDdh
MjMzZGZkYTQ2OGMzODZmAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAUGF0aABN
aWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFz
a3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1Rf
OTE2NjgzY2M2ZTRhNDUwN2EyMzNkZmRhNDY4YzM4NmYuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVt
AHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2Jh
bGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdl
cgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF85MTY2ODNjYzZlNGE0NTA3YTIzM2RmZGE0Njhj
Mzg2Zi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfOTE2
NjgzY2M2ZTRhNDUwN2EyMzNkZmRhNDY4YzM4NmYuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNl
dHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVjdABnZXRfRGVmYXVsdABz
ZXRfVGFza1Jlc3VsdABnZXRfQXNzZW1ibHkAAB1VAHMAZQByADoAOgBGAEkATABFAFAAQQBUAEgA
AB1VAHMAZQByADoAOgBGAEkATABFAE4AQQBNAEUAAHFTAFQAXwA5ADEANgA2ADgAMwBjAGMANgBl
ADQAYQA0ADUAMAA3AGEAMgAzADMAZABmAGQAYQA0ADYAOABjADMAOAA2AGYALgBQAHIAbwBwAGUA
cgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAATi5TFQFL5SpY5UNb5kjqYAAQgAQEIAyAA
AQUgAQEREQQgAQEOBSABARFRAwcBDgQgABJhBCAAEmUFIAESaRwDIAAcAyAADgQAAQ4OBCABARwG
AAEScRF1BCAAEnkGIAIBDhJ5CLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYS
EAIGCAMGERQEAAASSQQAABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEACAAAAAAA
HgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF85MTY2ODNjYzZl
NGE0NTA3YTIzM2RmZGE0NjhjMzg2ZgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIzAABJAQAa
Lk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQg
RnJhbWV3b3JrIDQuN7QAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADYLQAAAAAAAAAAAADyLQAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAA5C0AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQChQzEiAAABAKFDMSI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADkAMQA2ADYAOAAzAGMAYwA2AGUANABhADQANQAwADcAYQAyADMAMwBkAGYAZABh
ADQANgA4AGMAMwA4ADYAZgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA4ADcANQAzAC4AMQA3ADMAMQAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADkAMQA2ADYAOAAzAGMAYwA2AGUANABhADQANQAwADcAYQAyADMAMwBkAGYAZABhADQA
NgA4AGMAMwA4ADYAZgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AOQAxADYANgA4ADMAYwBjADYAZQA0AGEANAA1ADAANwBhADIAMwAzAGQA
ZgBkAGEANAA2ADgAYwAzADgANgBmAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADkAMQA2ADYAOAAzAGMAYwA2AGUANABhADQANQAwADcAYQAyADMAMwBkAGYA
ZABhADQANgA4AGMAMwA4ADYAZgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOAA3ADUAMwAuADEANwAzADEAMwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAA3ADUAMwAuADEANwAzADEAMwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAEPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Load Multiple Excel Files\Update date and time File System Task"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="File System Task"
          DTS:Disabled="True"
          DTS:DTSID="{A985C3EB-465D-4EE0-A37F-893582A976B7}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update date and time File System Task"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="RenameFile"
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::FILEPATH"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::NEWFILENAME"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Load Multiple Excel Files.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{18A4A76E-B68C-41E0-B654-A6BA81A275D1}"
          DTS:From="Package\Load Multiple Excel Files\Script Task to Display message"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Load Multiple Excel Files\Data Flow Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Load Multiple Excel Files.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{05A65335-A5BE-4F9B-BC17-C2B66C7B47CD}"
          DTS:From="Package\Load Multiple Excel Files\Data Flow Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Load Multiple Excel Files\Get Success Count and Error Count" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Load Multiple Excel Files.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{868207EF-39B1-4CAC-94FF-DB529C11F5DF}"
          DTS:From="Package\Load Multiple Excel Files\Get Success Count and Error Count"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Load Multiple Excel Files\Update date and time File System Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Load Multiple Excel Files.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{3FBD87E5-9D1D-477C-9BF3-ABB24AA28EC5}"
          DTS:From="Package\Load Multiple Excel Files\Achive processed File System Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Load Multiple Excel Files\Populate Audit Table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Load Multiple Excel Files.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{87B6F9B8-8591-46C0-93BD-ED7BCEC2EFC5}"
          DTS:From="Package\Load Multiple Excel Files\Update date and time File System Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Load Multiple Excel Files\Achive processed File System Task" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{E37A3B3A-C14B-4BBD-AA89-536089EEBE57}"
          DTS:ObjectName="{E37A3B3A-C14B-4BBD-AA89-536089EEBE57}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FILEPATH" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{2C7507C8-0858-4AEE-8CD8-A903C9656E85}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_304bfbd31f004d24bfdedf8e2e7cd369"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::LoadData">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_304bfbd31f004d24bfdedf8e2e7cd369")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_304bfbd31f004d24bfdedf8e2e7cd369")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_304bfbd31f004d24bfdedf8e2e7cd369.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{88B6ACAD-AE1C-4981-A014-20E3AA42089A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_304bfbd31f004d24bfdedf8e2e7cd369</RootNamespace>
    <AssemblyName>ST_304bfbd31f004d24bfdedf8e2e7cd369</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_304bfbd31f004d24bfdedf8e2e7cd369
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // Get the current day of the week
            DayOfWeek currentDayOfWeek = DateTime.Now.DayOfWeek;

            // Initialize a package-level variable
            bool shouldLoadData = false;

            // Check if the current day is Monday or Thursday (bi-weekly schedule)
            if (currentDayOfWeek == DayOfWeek.Monday || currentDayOfWeek == DayOfWeek.Thursday)
            {
                shouldLoadData = true;
            }

            // Set the SSIS package variable with the result
            Dts.Variables["User::LoadData"].Value = shouldLoadData;

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_304bfbd31f004d24bfdedf8e2e7cd369</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_304bfbd31f004d24bfdedf8e2e7cd369</msb:DisplayName>
    <msb:ProjectId>{07E96EF2-E1D3-49F0-8190-DF5079A7B1FD}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_304bfbd31f004d24bfdedf8e2e7cd369.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_304bfbd31f004d24bfdedf8e2e7cd369.Properties.Settings.get_Default():ST_304bfbd31f004d24bfdedf8e2e7cd369.Properties.Sett" +
    "ings")]

namespace ST_304bfbd31f004d24bfdedf8e2e7cd369.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_304bfbd31f004d24bfdedf8e2e7cd369.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_304bfbd31f004d24bfdedf8e2e7cd369.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_304bfbd31f004d24bfdedf8e2e7cd369.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_304bfbd31f004d24bfdedf8e2e7cd369.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_304bfbd31f004d24bfdedf8e2e7cd369.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_304bfbd31f004d24bfdedf8e2e7cd369.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHxfg2UAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAA5i0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJQtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA7A0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADI
LQAAAAAAAEgAAAACAAUADCEAANALAAABAAAAAAAAANwsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAgBHAAAAAQAAESgQAAAKDBICKBEAAAoKFgsGFy4EBhoz
AhcLAigSAAAKbxMAAApyAQAAcG8UAAAKB4wdAAABbxUAAAoCKBIAAAoWbxYAAAoqHgIoFwAACioe
AigYAAAKKq5+AQAABC0ech8AAHDQAwAAAigZAAAKbxoAAApzGwAACoABAAAEfgEAAAQqGn4CAAAE
Kh4CgAIAAAQqGn4DAAAEKh4CKBwAAAoqLnMIAAAGgAMAAAQqAAAAQlNKQgEAAQAAAAAADAAAAHY0
LjAuMzAzMTkAAAAABQBsAAAA1AMAACN+AABABAAAfAUAACNTdHJpbmdzAAAAALwJAACUAAAAI1VT
AFAKAAAQAAAAI0dVSUQAAABgCgAAcAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAA
AQAAACAAAAAFAAAABgAAAAkAAAABAAAAHAAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAE
AAAAAQAAAAEAAAAAAIMDAQAAAAAABgAuAlsEBgC9AlsEBgB6AUgEDwDPBAAABgCnAQkEBgARAgkE
BgDyAQkEBgCkAgkEBgBOAgkEBgBnAgkEBgC+AQkEBgDZAesCCgCCAjIDCgD5ADIDBgAJA7QDBgCb
ALQDBgC7A7QDBgBdAUgEBgBCBbQDBgArBHsEBgAbBPQDDgAtAW0DDgCOAW0DDgAVAd8DBgBCAVsE
CgBbAzIDEgARBaQAEgBuAKQABgDMA7QDBgDEALQDBgB3ALQDBgBwBQkEAAAAACUAAAAAAAEAAQAB
ABAA1AMBADkAAQABAAAAEACCBN4ETQABAAMAAAEQABsF3gRhAAMABwADAQAANAUAAEUABAAKABEA
wANzABEA6QB3ABEAXgB7AAYGTQB/AFaAJAWCAFaAyQCCAFAgAAAAAIYA2gMGAAEAoyAAAAAAhhg7
BAYAAQCrIAAAAACDGDsEBgABALMgAAAAAJMIJwSGAAEA3yAAAAAAkwjRAIsAAQDmIAAAAACTCN0A
kAABAO4gAAAAAJYISQWWAAIA9SAAAAAAhhg7BAYAAgD9IAAAAACRGEEEmwACAAAAAQDlAgkAOwQB
ABEAOwQGABkAOwQKACkAOwQQADEAOwQQADkAOwQQAEEAOwQQAEkAOwQQAFEAOwQQAFkAOwQQAGEA
OwQQAGkAOwQGAJEAOwQGALkAOwQVAMkAOwQGAIEAZAUjAIEABQMoAHEALAUtANEADQUyANkAqwM3
AOEA2wI9ANEAVQUBAHEAOwQGAJkAOwQGAPEAiQBCAPEAbAVJAKEAOwRPAMEAOwQGAAgAFABpAAgA
GABuACkAcwDWAC4ACwCuAC4AEwC3AC4AGwDWAC4AIwDfAC4AKwAIAS4AMwAIAS4AOwAIAS4AQwDf
AC4ASwAOAS4AUwAIAS4AWwAlAUMAYwBuAEkAcwDWAGEAewBuAGMAawBuABsAAwABAAQAAwAAACsE
nwAAAPEApAAAAE0FqQACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAADIiTm4AAAAAAAAB
AAAABAAAAAAAAAAAAAAAVwBVAAAAAAAPAAAAAAAAAAAAAABgABMDAAAAAAQAAAAAAAAAAAAAAFcA
tAMAAAAADwAAAAAAAAAAAAAAYAAuAAAAAAAAAAAAAQAAAIwEAAAFAAIAAAAAU1RfMzA0YmZiZDMx
ZjAwNGQyNGJmZGVkZjhlMmU3Y2QzNjkAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5h
Z2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVU
eXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNl
Q3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmli
dXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmli
dXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0u
UnVudGltZS5WZXJzaW9uaW5nAGdldF9EYXlPZldlZWsATWljcm9zb2Z0LlNxbFNlcnZlci5TY3Jp
cHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2Jq
ZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzMwNGJmYmQzMWYwMDRkMjRiZmRlZGY4
ZTJlN2NkMzY5LmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBCb29sZWFuAFNj
cmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVt
LlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IA
U3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVt
LlJlc291cmNlcwBTVF8zMDRiZmJkMzFmMDA0ZDI0YmZkZWRmOGUyZTdjZDM2OS5Qcm9wZXJ0aWVz
LlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfMzA0YmZiZDMxZjAwNGQyNGJm
ZGVkZjhlMmU3Y2QzNjkuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MA
Z2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABn
ZXRfTm93AGdldF9Bc3NlbWJseQAAAAAAHVUAcwBlAHIAOgA6AEwAbwBhAGQARABhAHQAYQAAcVMA
VABfADMAMAA0AGIAZgBiAGQAMwAxAGYAMAAwADQAZAAyADQAYgBmAGQAZQBkAGYAOABlADIAZQA3
AGMAZAAzADYAOQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAA
HqMyc8SShkyt55ua5H/ebAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQcHAxE9AhFBBAAAEUEE
IAARPQQgABJpBCAAEm0FIAEScRwEIAEBHAYAARJ5EX0FIAASgIEHIAIBDhKAgQi3elxWGTTgiQiJ
hF3NgIDMkQQAAAAABAEAAAADBhJRAwYSVQMGEhACBggDBhEUBAAAElEEAAASVQUAAQESVQQAABIQ
AwAAAQQIABJRBAgAElUECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwEIAQACAAAAAAAoAQAjU1RfMzA0YmZiZDMxZjAwNGQyNGJmZGVkZjhlMmU3Y2QzNjkAAAUBAAAA
ABYBABFDb3B5cmlnaHQgQCAgMjAyMwAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAALwt
AAAAAAAAAAAAANYtAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADILQAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEATm4yIgAAAQBObjIiPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwAzADAANABiAGYAYgBkADMAMQBmADAAMAA0AGQAMgA0AGIAZgBkAGUAZABmADgA
ZQAyAGUANwBjAGQAMwA2ADkAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4AOAA3ADUANAAuADIAOAAyADMAOAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAFQAXwAzADAANABiAGYAYgBkADMAMQBmADAAMAA0AGQAMgA0AGIAZgBkAGUAZABmADgAZQAy
AGUANwBjAGQAMwA2ADkALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABU
AHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADMAMAA0AGIAZgBiAGQAMwAxAGYAMAAwADQAZAAyADQAYgBmAGQAZQBk
AGYAOABlADIAZQA3AGMAZAAzADYAOQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwAzADAANABiAGYAYgBkADMAMQBmADAAMAA0AGQAMgA0AGIAZgBkAGUAZABm
ADgAZQAyAGUANwBjAGQAMwA2ADkAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADgANwA1ADQALgAyADgAMgAzADgAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADgANwA1ADQALgAyADgAMgAzADgAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAA6D0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Send Mail Notification"
      DTS:CreationName="Microsoft.SendMailTask"
      DTS:Description="Send Mail Task"
      DTS:Disabled="True"
      DTS:DTSID="{4A7E3627-3C69-4264-83C6-F74D8763EB3D}"
      DTS:ExecutableType="Microsoft.SendMailTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Send Mail Notification"
      DTS:TaskContact="Send Mail Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SendMailTask:SendMailTaskData
          SendMailTask:SMTPServer="{F23305FD-FF01-46E5-A0D3-0E15E5BC7F3D}"
          SendMailTask:From="abc@gmail.com"
          SendMailTask:To="xyz@yahoo.com"
          SendMailTask:MessageSource="Please archive folder to find the files." xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate Execute SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:DelayValidation="True"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{555CD30D-7F73-4486-89BA-7432BB5D244D}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate Execute SQL Task"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{24EA7E4D-7923-4C13-B712-F99433E9C087}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE [dbo].[tbl_stg_prospects]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{553350D3-6967-4C48-BDF5-8C9C8D1E4C78}"
      DTS:From="Package\Truncate Execute SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Load Multiple Excel Files" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{77245AA2-A6E7-4899-B3ED-3A9374483199}"
      DTS:From="Package\Script Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Truncate Execute SQL Task" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{B0DEEB5E-4B55-474F-93B1-8F3BFA0D3A27}"
      DTS:From="Package\Execute SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Send Mail Notification" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{BEF54C0D-4340-4BC3-A78F-30FE056BF13E}"
      DTS:From="Package\Load Multiple Excel Files"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Execute SQL Task" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{A47DBDB5-9018-4BCC-9525-DB65AECAB4F7}"
      DTS:EventID="1705096"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{67B75B7F-8D2C-431E-BD94-CA6B63801DA7}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssge="clr-namespace:Microsoft.SqlServer.Graph.Extended;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
        <NodeLayout
          Size="164,42.6666666666667"
          Id="Package\Execute SQL Task"
          TopLeft="155.916665157924,762.866663086812" />
        <NodeLayout
          Size="191.333333333334,43.3333333333334"
          Id="Package\Load Multiple Excel Files\Achive processed File System Task"
          TopLeft="49.6666651020447,337.349989783466" />
        <NodeLayout
          Size="152,42"
          Id="Package\Load Multiple Excel Files\Data Flow Task"
          TopLeft="62.8749967683108,93.4333287539084" />
        <NodeLayout
          Size="245.333333333334,42.6666666666667"
          Id="Package\Load Multiple Excel Files\Get Success Count and Error Count"
          TopLeft="16.1666652138036,167.966660134594" />
        <NodeLayout
          Size="177.333333333334,42.6666666666667"
          Id="Package\Load Multiple Excel Files\Populate Audit Table"
          TopLeft="51.7916646829497,413.216654497485" />
        <NodeLayout
          Size="225.333333333334,42.6666666666667"
          Id="Package\Load Multiple Excel Files\Script Task to Display message"
          TopLeft="24.6666654745737,23.3166615409654" />
        <NodeLayout
          Size="181.333333333334,44.6666666666667"
          Id="Package\Load Multiple Excel Files\Update date and time File System Task"
          TopLeft="48.6249983515592,260.199992700816" />
        <EdgeLayout
          Id="Package\Load Multiple Excel Files.PrecedenceConstraints[Constraint]"
          TopLeft="138.104164454776,65.9833282076321">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,27.4500005462763"
              Start="0,0"
              End="0,19.9500005462763">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.9500005462763" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Multiple Excel Files.PrecedenceConstraints[Constraint 1]"
          TopLeft="138.854164324391,135.433328753908">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,32.5333313806856"
              Start="0,0"
              End="0,25.0333313806856">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.0333313806856" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Multiple Excel Files.PrecedenceConstraints[Constraint 2]"
          TopLeft="139.062498449348,210.63332680126">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,49.5666658995551"
              Start="0,0"
              End="0,42.0666658995551">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.0666658995551" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Multiple Excel Files.PrecedenceConstraints[Constraint 3]"
          TopLeft="142.895831559164,380.683323116799">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,32.5333313806854"
              Start="0,0"
              End="0,25.0333313806854">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.0333313806854" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Multiple Excel Files.PrecedenceConstraints[Constraint 4]"
          TopLeft="142.312498393469,304.866659367482">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,32.4833304159841"
              Start="0,0"
              End="0,24.9833304159841">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.9833304159841" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="315.333333333334,510.666666666667"
          Size="315.333333333334,554"
          Id="Package\Load Multiple Excel Files"
          TopLeft="82.3749988544735,199.783332136174" />
        <NodeLayout
          Size="132,42.6666666666667"
          Id="Package\Script Task"
          TopLeft="174.37499740161,36.2333311714729" />
        <NodeLayout
          Size="181.333333333334,42.6666666666667"
          Id="Package\Send Mail Notification"
          TopLeft="148.124997792766,843.266656392023" />
        <NodeLayout
          Size="209.333333333334,42.6666666666667"
          Id="Package\Truncate Execute SQL Task"
          TopLeft="128.499998211861,115.966665132443" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="236.604165199834,158.63333179911">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,41.1500003370643"
              Start="0,0"
              End="0,33.6500003370643">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.6500003370643" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="236.770831140069,78.8999978381396">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,37.0666672943035"
              Start="0,0"
              End="0,29.5666672943035">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5666672943035" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="238.354164808678,805.533329753478">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,37.7333266385449"
              Start="0,0"
              End="0,30.2333266385449">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.2333266385449" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="240.04166552114,753.783332136174">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="79.8749996367839,30.4166642839713"
              Start="0,0"
              End="72.3749996367839,30.4166642839713">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.4166642839713" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.4166642839713"
                    Point2="0,30.4166642839713"
                    Point3="4,30.4166642839713" />
                  <mssgle:LineSegment
                    End="72.3749996367839,30.4166642839713" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Creating File System to Archive the Files:&#xA;- 1st display what files have been moved during run time.&#xA;- When file is selected during this script task, it will be overwritten everytime.&#xA;- Move the files after processing in the data flow task before putting them into &#xA;  the archive.&#xA;&#xA; How to Update the Files and Time :&#xA;&#xA;REPLACE( @[User::FILEPATH],&quot;.xls&quot;, &quot;&quot; ) + &quot;_&quot; +&#xA;&#xA;REPLACE( (DT_WSTR, 10) (DT_DBDATE) @[System::StartTime], &quot;-&quot;, &quot;&quot; ) + &quot;_&quot; +&#xA;&#xA;RIGHT(  &quot;0&quot; +(DT_WSTR, 2)DATEPART( &quot;HH&quot;, (DT_DBTIME) @[System::StartTime] ) , 2 ) + &#xA;&#xA;RIGHT(  &quot;0&quot; +(DT_WSTR, 2)DATEPART( &quot;MM&quot;, (DT_DBTIME) @[System::StartTime] ) , 2 ) +&#xA;&#xA;RIGHT(  &quot;0&quot; +(DT_WSTR, 2)DATEPART( &quot;SS&quot;, (DT_DBTIME) @[System::StartTime] ) , 2 ) + &quot;.xls&quot;"
          ParentId="Package"
          Size="552,270"
          Id="bdff4f86-d55e-4e14-8f74-f13e9e390705"
          TopLeft="421.249993722886,353.166661436359">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="12"
              Color="#FFFF0000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="   //  script task to display message&#xA;public void Main()&#xA;  {&#xA;            // TODO: Add your code here&#xA;            string strFileName; // FILENAME SSIS Variable&#xA;            string strFilePath; // FILEPATh SSIS Variable&#xA;&#xA;            strFilePath = Dts.Variables[&quot;User::FILEPATH&quot;].Value.ToString();&#xA;&#xA;            strFileName = Path.GetFileName(strFilePath);&#xA;&#xA;            // Now assign the name&#xA;            Dts.Variables[&quot;User::FILENAME&quot;].Value = strFileName;&#xA;&#xA;            //MessageBox.Show(strFileName);&#xA;                  &#xA;   Dts.TaskResult = (int)ScriptResults.Success;&#xA;  }"
          ParentId="Package"
          Size="381.333333333334,262.666666666667"
          Id="b005e7c5-d809-46f9-9234-76ede03bca09"
          TopLeft="433.791661255683,56.9333381684616">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11"
              Color="#FF008000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="// Script task to load data&#xA;  public void Main()&#xA;  {&#xA;            // Get the current day of the week&#xA;            DayOfWeek currentDayOfWeek = DateTime.Now.DayOfWeek;&#xA;&#xA;            // Initialize a package-level variable&#xA;            bool shouldLoadData = false;&#xA;&#xA;            // Check if the current day is Monday or Thursday (bi-weekly schedule)&#xA;            if (currentDayOfWeek == DayOfWeek.Monday || currentDayOfWeek == DayOfWeek.Thursday)&#xA;            {&#xA;                shouldLoadData = true;&#xA;            }&#xA;&#xA;            // Set the SSIS package variable with the result&#xA;            Dts.Variables[&quot;User::LoadData&quot;].Value = shouldLoadData;&#xA;&#xA;            Dts.TaskResult = (int)ScriptResults.Success;&#xA;  }"
          ParentId="Package"
          Size="536,289.333333333334"
          Id="2d5c7f4a-ec0e-4a3b-868e-ed3e127bcd7d"
          TopLeft="815.624987846241,60.8333343793948">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11"
              Color="#FFFF0000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Populate Audit Table on Execute SQL task: &#xA;EXECUTE [upsAuditLoadedFiles] ?"
          ParentId="Package"
          FontInfo="{x:Null}"
          Size="253.333333333334,56"
          Id="a869b1f4-1900-4939-b681-39d1b2453ca6"
          TopLeft="439.999993443489,647.966655950348" />
        <AnnotationLayout
          Text="** How to create email **&#xA;-&gt; New Accounts&#xA;  ●  Create new account 'FrankOnlineClass' for SMTP server 'smtp.gmail.com'&#xA;-&gt;New Profiles&#xA;  ●  Create New profile 'Frank Ngeno'&#xA;-&gt; Adding Accounts Profiles&#xA;  ●  Add account 'FrankOnlineClass' to profile 'Frank Ngeno' with priority '1'&#xA;-&gt; Manage Profile Security&#xA;  ●  Grant '##MS_PolicyEventProcessingLogin##' access to 'Frank Ngeno'&#xA;&#xA;** Send Notification Store procedures:&#xA;Create Procedure usp_SendMail&#xA;@Profile VARCHAR(255),&#xA;@Rec VARCHAR(255),&#xA;@Sub VARCHAR(255),&#xA;@EmailBody VARCHAR(Max)&#xA;AS&#xA;BEGIN&#xA;    EXEC msdb..sp_send_dbmail @profile_name=@Profile, &#xA;@recipients=@Rec, @subject=@Sub, @body=@EmailBody&#xA;END&#xA;&#xA;GO&#xA;Execute usp_SendMail 'Frank Ngeno', 'FrankNgenolearningcenter', 'test Email', 'Please Check your excel files.....'&#xA;&#xA;&#xA;"
          ParentId="Package"
          FontInfo="{x:Null}"
          Size="612,454.666666666667"
          Id="a3dffa89-7694-48ac-bfd0-a46e113263b8"
          TopLeft="434.999993517995,705.483326464196" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Load Multiple Excel Files\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="185.333333333334,52"
          Id="Package\Load Multiple Excel Files\Data Flow Task\Successfull Row Count"
          TopLeft="215.268515283725,176.924996925742" />
        <NodeLayout
          Size="184,52"
          Id="Package\Load Multiple Excel Files\Data Flow Task\Fiilter  Out Null Values"
          TopLeft="250.310181438164,20.3499997791648" />
        <NodeLayout
          Size="157.333333333334,52"
          Id="Package\Load Multiple Excel Files\Data Flow Task\error Row Count"
          TopLeft="506.924761146325,129.824997785837" />
        <NodeLayout
          Size="172,43.3333333333334"
          Id="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination"
          TopLeft="126.466433372987,740.699986773134" />
        <NodeLayout
          Size="157.333333333334,52"
          Id="Package\Load Multiple Excel Files\Data Flow Task\Data Conversion"
          TopLeft="258.956014841347,486.924991346747" />
        <NodeLayout
          Size="272,52"
          Id="Package\Load Multiple Excel Files\Data Flow Task\Derived column Transform Split Columns"
          TopLeft="122.247682690793,383.924993206412" />
        <NodeLayout
          Size="166.666666666667,52"
          Id="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Command"
          TopLeft="467.41434499887,750.345819975709" />
        <NodeLayout
          Size="200,42.6666666666667"
          Id="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records"
          TopLeft="686.718739767094,486.687491297349" />
        <NodeLayout
          Size="154.666666666667,42.6666666666667"
          Id="Package\Load Multiple Excel Files\Data Flow Task\Derived Column"
          TopLeft="514.843742328231,246.187495597824" />
        <NodeLayout
          Size="121.333333333334,42.6666666666667"
          Id="Package\Load Multiple Excel Files\Data Flow Task\Multicast"
          TopLeft="604.687490989454,330.687494086847" />
        <NodeLayout
          Size="200,42.6666666666667"
          Id="Package\Load Multiple Excel Files\Data Flow Task\Error Records Destination"
          TopLeft="449.218743306119,489.937491239235" />
        <NodeLayout
          Size="201.333333333334,52"
          Id="Package\Load Multiple Excel Files\Data Flow Task\Check for existing records"
          TopLeft="324.143513542152,631.524988743216" />
        <NodeLayout
          Size="139.333333333334,52"
          Id="Package\Load Multiple Excel Files\Data Flow Task\Excel Source"
          TopLeft="63.268517891428,22.2749997268618" />
        <EdgeLayout
          Id="Package\Load Multiple Excel Files\Data Flow Task.Paths[Row Count Output 11]"
          TopLeft="588.884251737278,181.824997785837">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,64.362497811988"
              Start="0,0"
              End="0,56.862497811988">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.862497811988" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Multiple Excel Files\Data Flow Task.Paths[Row Count Output 1]"
          TopLeft="307.935181950392,228.924996925742">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-93.6874992595986,154.99999628067"
              Start="0,0"
              End="-93.6874992595986,147.49999628067">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,88.4561381323296" />
                  <mssgle:CubicBezierSegment
                    Point1="0,88.4561381323296"
                    Point2="0,92.4561381323296"
                    Point3="-4,92.4561381323296" />
                  <mssgle:LineSegment
                    End="-89.6874992595986,92.4561381323296" />
                  <mssgle:CubicBezierSegment
                    Point1="-89.6874992595986,92.4561381323296"
                    Point2="-93.6874992595986,92.4561381323296"
                    Point3="-93.6874992595986,96.4561381323296" />
                  <mssgle:LineSegment
                    End="-93.6874992595986,147.49999628067" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Multiple Excel Files\Data Flow Task.Paths[Multicast Output 2]"
          TopLeft="684.24304654501,373.354160753514">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="102.475693222084,113.333330543836"
              Start="0,0"
              End="102.475693222084,105.833330543836">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.2183647337117" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.2183647337117"
                    Point2="0,46.2183647337117"
                    Point3="4,46.2183647337117" />
                  <mssgle:LineSegment
                    End="98.4756932220839,46.2183647337117" />
                  <mssgle:CubicBezierSegment
                    Point1="98.4756932220839,46.2183647337117"
                    Point2="102.475693222084,46.2183647337117"
                    Point3="102.475693222084,50.2183647337117" />
                  <mssgle:LineSegment
                    End="102.475693222084,105.833330543836" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Multiple Excel Files\Data Flow Task.Paths[Multicast Output 1]"
          TopLeft="646.465268767232,373.354160753514">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-97.2465254611127,116.583330485721"
              Start="0,0"
              End="-97.2465254611127,109.083330485721">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5437443195566" />
                  <mssgle:CubicBezierSegment
                    Point1="0,43.5437443195566"
                    Point2="0,47.5437443195566"
                    Point3="-4,47.5437443195566" />
                  <mssgle:LineSegment
                    End="-93.2465254611127,47.5437443195566" />
                  <mssgle:CubicBezierSegment
                    Point1="-93.2465254611127,47.5437443195566"
                    Point2="-97.2465254611127,47.5437443195566"
                    Point3="-97.2465254611127,51.5437443195566" />
                  <mssgle:LineSegment
                    End="-97.2465254611127,109.083330485721" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Multiple Excel Files\Data Flow Task.Paths[Lookup No Match Output]"
          TopLeft="392.587957986596,683.524988743216">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-180.121524613609,57.1749980299178"
              Start="0,0"
              End="-180.121524613609,49.6749980299178">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.1404722644082" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.1404722644082"
                    Point2="0,23.1404722644082"
                    Point3="-4,23.1404722644082" />
                  <mssgle:LineSegment
                    End="-176.121524613609,23.1404722644082" />
                  <mssgle:CubicBezierSegment
                    Point1="-176.121524613609,23.1404722644082"
                    Point2="-180.121524613609,23.1404722644082"
                    Point3="-180.121524613609,27.1404722644082" />
                  <mssgle:LineSegment
                    End="-180.121524613609,49.6749980299178" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-145.867149025555,28.1404722644082,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Multiple Excel Files\Data Flow Task.Paths[Lookup Match Output]"
          TopLeft="424.810180208818,683.524988743216">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="125.937498123385,66.8208312324933"
              Start="0,0"
              End="125.937498123385,59.3208312324933">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.4104156162467" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.4104156162467"
                    Point2="0,33.4104156162467"
                    Point3="4,33.4104156162467" />
                  <mssgle:LineSegment
                    End="121.937498123385,33.4104156162467" />
                  <mssgle:CubicBezierSegment
                    Point1="121.937498123385,33.4104156162467"
                    Point2="125.937498123385,33.4104156162467"
                    Point3="125.937498123385,37.4104156162467" />
                  <mssgle:LineSegment
                    End="125.937498123385,59.3208312324933" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="14.7773623429425,38.4104156162467,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Multiple Excel Files\Data Flow Task.Paths[InvalidRecords]"
          TopLeft="371.643514771497,72.3499997791648">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="213.947913041494,57.4749980066717"
              Start="0,0"
              End="213.947913041494,49.9749980066717">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.287283675117" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.287283675117"
                    Point2="0,23.287283675117"
                    Point3="4,23.287283675117" />
                  <mssgle:LineSegment
                    End="209.947913041494,23.287283675117" />
                  <mssgle:CubicBezierSegment
                    Point1="209.947913041494,23.287283675117"
                    Point2="213.947913041494,23.287283675117"
                    Point3="213.947913041494,27.287283675117" />
                  <mssgle:LineSegment
                    End="213.947913041494,49.9749980066717" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="73.919776833247,28.287283675117,66.108359375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Multiple Excel Files\Data Flow Task.Paths[Excel Source Output]"
          TopLeft="202.601851224761,47.3124997530133">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="47.7083302134027,0"
              Start="0,0"
              End="40.2083302134027,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="40.2083302134027,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Multiple Excel Files\Data Flow Task.Paths[Derived Column Output1]"
          TopLeft="592.177075661564,288.854162264491">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="73.1770819945568,41.8333318223558"
              Start="0,0"
              End="73.1770819945568,34.3333318223558">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.9166659111779" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.9166659111779"
                    Point2="0,20.9166659111779"
                    Point3="4,20.9166659111779" />
                  <mssgle:LineSegment
                    End="69.1770819945568,20.9166659111779" />
                  <mssgle:CubicBezierSegment
                    Point1="69.1770819945568,20.9166659111779"
                    Point2="73.1770819945568,20.9166659111779"
                    Point3="73.1770819945568,24.9166659111779" />
                  <mssgle:LineSegment
                    End="73.1770819945568,34.3333318223558" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Multiple Excel Files\Data Flow Task.Paths[Derived Column Output]"
          TopLeft="258.247682690793,435.924993206412">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="79.3749988172202,50.9999981403352"
              Start="0,0"
              End="79.3749988172202,43.4999981403352">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.4999990701676" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.4999990701676"
                    Point2="0,25.4999990701676"
                    Point3="4,25.4999990701676" />
                  <mssgle:LineSegment
                    End="75.3749988172202,25.4999990701676" />
                  <mssgle:CubicBezierSegment
                    Point1="75.3749988172202,25.4999990701676"
                    Point2="79.3749988172202,25.4999990701676"
                    Point3="79.3749988172202,29.4999990701676" />
                  <mssgle:LineSegment
                    End="79.3749988172202,43.4999981403352" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Multiple Excel Files\Data Flow Task.Paths[Data Conversion Output]"
          TopLeft="337.622681508013,538.924991346747">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="87.1874987008052,92.5999973964689"
              Start="0,0"
              End="87.1874987008052,85.0999973964689">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.2999986982344" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.2999986982344"
                    Point2="0,46.2999986982344"
                    Point3="4,46.2999986982344" />
                  <mssgle:LineSegment
                    End="83.1874987008052,46.2999986982344" />
                  <mssgle:CubicBezierSegment
                    Point1="83.1874987008052,46.2999986982344"
                    Point2="87.1874987008052,46.2999986982344"
                    Point3="87.1874987008052,50.2999986982344" />
                  <mssgle:LineSegment
                    End="87.1874987008052,85.0999973964689" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Multiple Excel Files\Data Flow Task.Paths[Conditional Split Default Output]"
          TopLeft="310.456015027611,72.3499997791648">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,104.574997146577"
              Start="0,0"
              End="0,97.0749971465768">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,97.0749971465768" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.61390625,42.7083970107884,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load Multiple Excel Files\Data Flow Task\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Load Multiple Excel Files\Data Flow Task\Destination Error Records">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Load Multiple Excel Files\Data Flow Task\Check for existing records">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Tbl_stg_Prospects]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Load Multiple Excel Files\Data Flow Task\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>